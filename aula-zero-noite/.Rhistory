(2-1/pi)*4
2-1/pi*4
cos(pi/2)
sin(2*pi)
1<2
1>2
.9999999999999999999999999 ==1
.9999999999999999999 ==1
.9999999999 ==1
.99999999999 ==1
.9999999999999 ==1
.999999999999999 ==1
.99999999999999999 ==1
.9999999999999999 ==1
!1<2
!1>2
help(mean)
?log
help(mean)
?log
help(mean)
?log
log(exp(1))
?log(exp(1))
abs(-1)
```{r}
```{r,eval=false}
install.packages("magrittr")
install.packages("magrittr")
```{r}
if (!require("devtools"))
```{r}
x <- 1
# x = 1
if(x == 1){
print("oi")
}else if(x == 2){
pirnt("tchau")
}else if(x != 9){
print("alo alo")
}else{
print("ufa")
}
x <- 1
# x = 1
if(x == 1){
print("oi")
}else if(x == 2){
pirnt("tchau")
}else if(x != 9){
print("alo alo")
}else{
print("ufa")
}
x <- 1
vetor <- c(1,2,3)
if(vetor == 1){
print("oi")
}else if(x ==2){
print("bye")
}else if(x != 9){
print("alo alo")
}else{
print("ufa")
}
for(contador in 1:5){
print(contador)
}
print(res)
res <-cont^3
res <- cont^3
res <- cont³
res <- cont ^3
res <- cont ^ 3
for(cont in 1:5){
res <- cont^3
print(res)
}
res <- cont^3
print(res)
for(cont in 1:5){
res <- cont^3
print(res)
}
res <- cont^3
```{r}
```{r}
for(cont in 1:5){
res <- cont^3
print(res)
}
vetor <- 30:35
indices <- seq_along(vetor)
for(i in indices){
print(vetor[1:i]/2)
}
vetor <- 30:35
vetor2 <- 40:45
indices <- seq_along(vetor)
for(i in indices){
print(vetor[1:i] + vetor2[1:i])
}
#set.seed(1)
jogadas <- 0
coroa <- FALSE
while(!coroa){
coroa<-runif(1) >0.5
jogadas <- jogadas +1
}
jogadas
#set.seed(1)
jogadas <- 0
coroa <- FALSE
while(!coroa){
coroa<-runif(1) >0.5
jogadas <- jogadas +1
}
jogadas
#set.seed(1)
jogadas <- 0
coroa <- FALSE
while(!coroa){
coroa<-runif(1) >0.5
jogadas <- jogadas +1
}
jogadas
#set.seed(1)
jogadas <- 0
coroa <- FALSE
while(!coroa){
coroa<-runif(1) >0.9
jogadas <- jogadas +1
}
jogadas
#set.seed(1)
jogadas <- 0
coroa <- FALSE
while(!coroa){
coroa<-runif(1) >0.9
jogadas <- jogadas +1
}
jogadas
#set.seed(1)
jogadas <- 0
coroa <- FALSE
while(!coroa){
coroa<-runif(1) >0.9
jogadas <- jogadas +1
}
jogadas
#set.seed(1)
jogadas <- 0
coroa <- FALSE
while(!coroa){
coroa<-runif(1) >0.9
jogadas <- jogadas +1
}
jogadas
#set.seed(1)
jogadas <- 0
coroa <- FALSE
while(!coroa){
coroa<-runif(1) >0.9
jogadas <- jogadas +1
}
jogadas
coroa<-runif(1) >0.5
coroa<-runif(1) >0.5
coroa<-runif(1) >0.5
runif(1) >0.5
runif(1) >0.5
runif(1) >0.5
runif(1) >0.5
runif(1) >0.5
runif(1) >0.5
runif(1) >0.5
runif(1) >0.5
class(2+1i)
class(vetor1)
vetor1 <- c(1,2,3,4)
vetor2 <- c(0,10)
vetor_palavras <- c(10,"1000")
class(vetor1)
class(vetor2)
class(vetor2)
vetor1 <- c(1,2,3,4)
vetor2 <- c(0,10)
vetor_palavras <- c(10,"1000","usp")
class(vetor2)
class(vetor_palavras)
class(c(TRUE))
class(c(TRUE,10))
v = c(TRUE,10)
v
vetor1[c(1,3)] #acessa o indice 1 e 3
vetor1 <- c(10,20,30,40)
vetor1[c(1,3)] #acessa o indice 1 e 3
vetor1[c(1,3,1,3)] #acessa o indice 1 e 3
vetor1[c(TRUE,FALSE,FALSE)]
vetor1[c(FALSE,FALSE,FALSE)]
vetor1[c(TRUE,FALSE,FALSE)]
vetor1[c(TRUE,FALSE,FALSE,TRUE)]
vetor1[c(TRUE,FALSE,TRUE)]
vetor1[vetor1<25]
m <- matrix(1:6, nrow = 2, ncol =3)
m
dim(m)
m[2, ]
m[ ,3]
m2 <- matrix(1:7,nrow = 2, ncol =4)# recicla vetor
m2 <- matrix(1:7,nrow = 2, ncol =4)# recicla vetor
m2
m %% m2 #multiplicação de matrizes
m <- matrix(1:6, nrow = 4, ncol =3)
m %% m2 #multiplicação de matrizes
m %% m2 #multiplicação de matrizes
m <- matrix(1:6, nrow = 4, ncol =3)
m
dim(m)
###
m[2, ]
m[ ,3]
m[1,2]
m2 <- matrix(1:7,nrow = 3, ncol =4)# recicla vetor
m %% m2 #multiplicação de matrizes
m2 <- matrix(1:7,nrow = 4, ncol =4)# recicla vetor
m %% m2 #multiplicação de matrizes
soma <- function(x,y=0){
resposta <- x+y
return (resposta)
}
soma(3)
soma <- function(x,y){
resposta <- x+y
return (resposta)
}
soma(3)
soma <- function(x,y=0){
resposta <- x+y
return (resposta)
}
soma(3,5)
"a"+1
"a"&1
"a"&&1
"a".1
"a"+"1"
